<?php

use Yii;
use DateTime;
use app\models\User;
use app\models\Forgot;
use app\models\Email;
use app\models\Fund;
use app\models\Account;
use app\models\TgCommunication;
use app\models\CartTg;
use app\models\Category;
use app\models\CategoryHasProduct;
use app\models\Product;
use app\models\ProductFeature;
use app\models\ProductPrice;
use app\models\Provider;
use app\models\ProviderHasProduct;
use app\modules\purchase\models\PurchaseProduct;

require_once __DIR__ . '/../utils/formatPrice.php';
require_once __DIR__ . '/../utils/getBalance.php';
require_once __DIR__ . '/../utils/editPricePurchase.php';
require_once __DIR__ . '/../utils/putInTheBasket.php';
require_once __DIR__ . '/../utils/cart/getCart.php';
require_once __DIR__ . '/../utils/continueSelection.php';



function requestMessage($bot, $message, $master, $admin) {

    $message_id = $message['message_id'];
    $from = $message['from'];
        $first_name = $from['first_name'];
    $chat = $message['chat'];
        $chat_id = $chat['id'];
    $text = $message['text'];

    if ($message['reply_to_message']) {
        $reply_to_message = $message['reply_to_message'];
        
        if ($reply_to_message['text']) {
            $reply_text = $reply_to_message['text'];
        }else 
        if ($reply_to_message['voice']) {
            $caption = $reply_to_message['caption'];
        }
    }

    if ($message['voice']) {
        $voice = $message['voice'];
        $file_id = $voice['file_id'];
    }


    /*******************
    
        –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ

    ********************/
    if ($text == "/start" || $text == "–°—Ç–∞—Ä—Ç" || $text == "/menu" || $text == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" || $text == "–ù–∞–∑–∞–¥" ||  $text == "üåü–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    {    

        $send = "–í –≥–æ–ª—É–±–æ–º –∫—Ä—É–∂–æ—á–∫–µ —Å –Ω–∏–∑—É, –≤ –º–µ–Ω—é, –í—ã –Ω–∞–π–¥—ë—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤—Å—é –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é";
               
        $keyboard = [
            [
                [ 'text' => '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ' ],
                [ 'text' => '–û –Ω–∞—Å' ]
            ],
            [
                [ 'text' => '–ó–∞–∫—É–ø–∫–∏' ]
            ],
        ];

        $cart = CartTg::findOne(['tg_id' => $chat_id]);
        if ($cart) {
            array_push($keyboard, [ [ 'text' => '–ö–æ—Ä–∑–∏–Ω–∞' ] ]);
        }

        // if ($chat_id == $master || $chat_id == $admin) {
        //     array_push($keyboard, [ [ 'text' => '–î–∞—Ç—ã –∑–∞–∫—É–ø–æ–∫' ] ]);
        // }else {
        //     $users = User::find()->where(['role' => [User::ROLE_MEMBER,User::ROLE_PARTNER]])->all();
        //     foreach($users as $user) {
        //         if ($chat_id == $user->tg_id) {
        //             array_push($keyboard, [ [ 'text' => '–ó–∞–∫—É–ø–∫–∏' ] ]);
        //         }
        //     }
        // }

        $ReplyKeyboardMarkup = [
            'keyboard' => $keyboard,
            'resize_keyboard' => true,
            'selective' => true,
        ];        
        $bot->sendMessage($chat_id, $send, null, $ReplyKeyboardMarkup);

        return;
    }

    //-----------------------------------------------------------------------
    $text_split = explode(" ", $text);

    if ($text_split[0] == "/start" && $text_split[1]) {
        if ($text_split[1] == "forgot") {

            $user = User::findOne(['tg_id' => $chat_id, 'disabled' => 0]);

            if (!$user) {
                $bot->sendMessage($chat_id, "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã!");
                return;
            }

            $forgot = Forgot::findOne(['user_id' => $user->id]);
            if (!$forgot) {
                $forgot = new Forgot();
                $forgot->user_id = $user->id;
            }
            $forgot->save();

            Email::tg_send('forgot-tg', $chat_id, ['url' => $forgot->url]);

            return;

        }else {

            $send = "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π " . $first_name . "!\r\n\r\n";
            $send .= "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, —ç—Ç–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ —Å–∞–π—Ç–µ –ë—É–¥—å-–ó–¥–æ—Ä–æ–≤.—Ä—É—Å.\r\n";
            $send .= "–í –±–æ—Ç–µ –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã. –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ (–ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∞ –∫ —ç—Ç–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é).";
            $host = "https://–±—É–¥—å-–∑–¥–æ—Ä–æ–≤.—Ä—É—Å/web";
            // $host = "http://localhost:8080";
            if ($text_split[1] == "member") $action = "register";
            else if ($text_split[1] == "provider") $action = "register-provider";
            $url = "$host/profile/$action?tg=$chat_id";
            $InlineKeyboardMarkup = [
                'inline_keyboard' => [[[
                    'text' => '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å',
                    'url' => "$url"
                ]]]
            ];
            $bot->sendMessage($chat_id, $send, null, $InlineKeyboardMarkup);

            return;
                
        }
    }
    //-----------------------------------------------------------------------


    /******************
    
           –¢–ï–°–¢

    *******************/
    if ($text == "–¢–µ—Å—Ç" || $text == "/test")
    {
        $send = "–í—ã –∑–∞—à–ª–∏ –Ω–∞ —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞–ø—Ä–æ—Å —Ç–µ—Å—Ç–æ–≤–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.";
    
        $tgCom = TgCommunication::findOne(['chat_id' => $chat_id]);

        if (!$tgCom) {
            $tgCom = new TgCommunication();
        }
            
        $tgCom->chat_id = $chat_id;
        $tgCom->to_chat_id = $master;
        // $tgCom->to_chat_id = $admin;
        
        if ( ! $tgCom->save() ) {            
            $send = "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è/—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞ TgCommunication!";
            $bot->sendMessage($chat_id, $send);
            // throw new Exception($send);
        }

        $bot->sendMessage($chat_id, $send);

        return;
    }

    /********************
    
           –ü–û–ú–û–©–¨

    *********************/
    if ($text == "–ü–æ–º–æ—â—å" || $text == "/help")
    {
        $send = "–í—ã –∑–∞—à–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏, –≤—ã–±–∏—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.";
    
        $KeyboardMarkup = [
            'keyboard' => [
                [
                    [ 'text' => '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã' ],
                ],
                [
                    [ 'text' => '–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∞–¥–º–∏–Ω—É' ],
                ],
            ],
            'resize_keyboard' => true,
            // 'one_time_keyboard' => true,
        ];

        $bot->sendMessage($chat_id, $send, null, $KeyboardMarkup);

        return;
    }


    /***********************
    
           –°–ü–ï–¶–ò–ê–õ–ò–°–¢–´

    ************************/
    if ($text == "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã" || $text == "/specialists")
    {
        $send = "–í—ã–±–µ—Ä–∏—Ç–µ";    
        $KeyboardMarkup = [
            'keyboard' => [
                [
                    [ 'text' => '–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∞–¥–º–∏–Ω—É' ],
                ],
            ],
            'resize_keyboard' => true
        ];
        $bot->sendMessage($chat_id, $send, null, $KeyboardMarkup);


        $send = "–ø—Ä–æ—Ñ—Ñ–µ—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ.";
    
        $InlineKeyboardMarkup = [
            'inline_keyboard' => [
                [
                    [
                        'text' => "–Æ—Ä–∏—Å–ø—Ä—É–¥–µ–Ω—Ü–∏—è",
                        'callback_data' => 'specialists_jurisprudence'
                    ],
                ],
                [
                    [
                        'text' => "–û–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏–µ",
                        'callback_data' => 'specialists_recovery'
                    ],
                ],
                [
                    [
                        'text' => "–≠–∑–æ—Ç–µ—Ä–∏–∫–∞",
                        'callback_data' => 'specialists_esotericism'
                    ],
                ]
            ]
        ];

        $bot->sendMessage($chat_id, $send, null, $InlineKeyboardMarkup);

        return;
    }



    /***********************************
    
           –ó–ê–î–ê–¢–¨ –í–û–ü–†–û–° –ê–î–ú–ò–ù–£

    ************************************/
    if ($text == "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∞–¥–º–∏–Ω—É" || $text == "/question")
    {
        $send = "–ó–¥–µ—Å—å –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à—É —Ä–∞–±–æ—Ç—É –∏–ª–∏ –≤–Ω–µ—Å—Ç–∏ —Å–≤–æ—ë –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ. –í–Ω–µ—Å–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤ —Å—Ç—Ä–æ–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –Ω–∞–º.";
        // $send = "–í—ã –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à—É —Ä–∞–±–æ—Ç—É –∏–ª–∏ –≤–Ω–µ—Å—Ç–∏ —Å–≤–æ—ë –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∏–≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –∏–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è.\r\n\r\n–ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –í–∞–º –ø—Ä–∏–¥—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–æ–ø—Ä–æ—Å–æ–º: '–í—ã –∂–µ–ª–∞–µ—Ç–µ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å?', –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É '–î–∞'. –ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–ª–∏ –∏–ª–∏ –Ω–µ –≤–µ—Ä–Ω–æ –Ω–∞–ø–∏—Å–∞–ª–∏, –Ω–∞–∂–º–∏—Ç–µ '–ù–µ—Ç'.";
           
        $HideKeyboard = [
            'hide_keyboard' => true
        ];

        $bot->sendMessage($chat_id, $send, null, $HideKeyboard);

        return;
    }


    
    /***********************
    
           –ò–ù–§–û–†–ú–ê–¶–ò–Ø

    ************************/
    if ($text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è" || $text == "/info")
    {
        $send = "–í —Ä–∞–∑–¥–µ–ª–µ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –í—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –±–∞–ª–∞–Ω—Å —Å–≤–æ–∏—Ö —Å—á–µ—Ç–æ–≤ –∞ —Ç–∞–∫ –∂–µ –≤–æ—Å–ø–æ–ª–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—à–µ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.";
    
        $KeyboardMarkup = [
            'keyboard' => [
                [
                    [ 'text' => '–ë–∞–ª–∞–Ω—Å' ],
                    [ 'text' => '–û–±—â–µ–µ' ],
                ],
            ],
            'resize_keyboard' => true
        ];

        $bot->sendMessage($chat_id, $send, null, $KeyboardMarkup);

        return;
    }
    

    /***********************
    
           –ë–ê–õ–ê–ù–°

    ************************/
    if ($text == "–ë–∞–ª–∞–Ω—Å" || $text == "/balance")
    {
        getBalance($bot, $chat_id);
        
        return;
    }
    

    /***********************
    
           –û–ë–©–ï–ï

    ************************/
    if ($text == "–û–±—â–µ–µ" || $text == "/general")
    {
        $send = "–û–∑–Ω–∞–∫–æ–º—Ç–µ—Å—å —Å –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø–æ –Ω–∞—à–∏–º –ü—Ä–æ–≥—Ä–∞–º–º–∞–º –∏ –æ –ö–æ–æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ —Ü–µ–ª–æ–º.";
    
        $KeyboardMarkup = [
            'keyboard' => [
                [
                    [ 'text' => '–ù–∞—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã' ],
                    [ 'text' => '–ö–æ–æ–ø–µ—Ä–∞—Ü–∏—è' ],
                ],
            ],
            'resize_keyboard' => true
        ];

        $bot->sendMessage($chat_id, $send, null, $KeyboardMarkup);

        return;
    }
    

    /***********************
    
           –ü–†–û–ì–†–ê–ú–ú–´

    ************************/
    if ($text == "–ù–∞—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã" || $text == "/programs")
    {
        
        $send = "–£–≤–∞–∂–∞–µ–º—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.";

        $KeyboardMarkup = [
            'keyboard' => [
                [
                    [ 'text' => '–ö–æ–æ–ø–µ—Ä–∞—Ü–∏—è' ],
                    [ 'text' => '–ù–∞–∑–∞–¥' ],
                ]
            ],
            'resize_keyboard' => true
        ];

        $bot->sendMessage($chat_id, $send, "markdown", $KeyboardMarkup);

        $send = "–í—ã–±–∏—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é—â–∏–µ –í–∞—Å –ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–ª—è —É—á–∞—Å—Ç–∏—è.";
            
        $InlineKeyboardMarkup = [
            'inline_keyboard' => [[[
                'text' => '–†–∞–∑—É–º–Ω—ã–π –ø–æ–¥—Ö–æ–¥',
                'callback_data' => 'program_reasonable'
            ]]]
        ];
        $bot->sendMessage($chat_id, $send, null, $InlineKeyboardMarkup);

        return;
    }
    

    /***********************
    
           –ö–û–û–ü–ï–†–ê–¶–ò–Ø

    ************************/
    if ($text == "–ö–æ–æ–ø–µ—Ä–∞—Ü–∏—è" || $text == "/cooperation")
    {
        $send = "–ë–∏–∑–Ω–µ—Å –∏–ª–∏ –∫–æ–æ–ø–µ—Ä–∞—Ü–∏—è";
    
        $KeyboardMarkup = [
            'keyboard' => [
                [
                    [ 'text' => '–ù–∞—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã' ],
                    [ 'text' => '–ù–∞–∑–∞–¥' ],
                ],
            ],
            'resize_keyboard' => true
        ];

        $bot->sendMessage($chat_id, $send, null, $KeyboardMarkup);
        
        $send = "–ú—ã —Ä–∞–¥—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å –í–∞–º –Ω–∞—à—É –º–∏–Ω–∏-–∫–Ω–∏–≥—É, –ø–æ—Å–≤—è—â–µ–Ω–Ω—É—é –≤–æ–ø—Ä–æ—Å–∞–º –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏—Ö –æ–±—â–µ—Å—Ç–≤ –≤ –†–æ—Å—Å–∏–∏.

–ù–µ—Å–º–æ—Ç—Ä—è –Ω–∞ —Ç–æ, —á—Ç–æ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏–µ –∫–æ–æ–ø–µ—Ä–∞—Ç–∏–≤—ã –≤—Å–µ –≤—Ä–µ–º—è —É –Ω–∞—Å ¬´–Ω–∞ —Å–ª—É—Ö—É¬ª, –º–∞–ª–æ –∫—Ç–æ –∑–Ω–∞–µ—Ç, —á—Ç–æ –æ–Ω–∏ –∏–∑ —Å–µ–±—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç. –ú–∞–∫—Å–∏–º—É–º, —á—Ç–æ –∏–∑–≤–µ—Å—Ç–Ω–æ ‚Äì —á—Ç–æ —ç—Ç–æ –æ–±—â–µ—Å—Ç–≤–æ, –æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω–æ–µ –ø–∞–π—â–∏–∫–∞–º–∏, —á—Ç–æ–±—ã –≤–º–µ—Å—Ç–µ —á—Ç–æ-—Ç–æ –¥–µ–ª–∞—Ç—å –∏–ª–∏ –∑–∞–∫—É–ø–∞—Ç—å.

–ò –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ—Ç—Ä–µ–±–∫–æ–æ–ø–µ—Ä–∞—Ü–∏–∏ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é—Ç—Å—è –∏–º–µ–Ω–Ω–æ —á–µ—Ä–µ–∑ –ø—Ä–∏–∑–º—É –ø–∞–π—â–∏–∫–æ–≤ ‚Äì –∫–∞–∫ –æ–±–º–µ–Ω—è—Ç—å –ø–∞–π, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ñ–æ—Ä–º–ª—è—Ç—å –∏ –ø–ª–∞—Ç–∏—Ç—å –≤–∑–Ω–æ—Å—ã, –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –ª–∏ –ø–∞–π –ø–æ –Ω–∞—Å–ª–µ–¥—Å—Ç–≤—É, –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ.

–û—Ç—Ä–∏—Ü–∞—Ç—å –ø–æ–ª—å–∑—É –∏ –≤—ã–≥–æ–¥–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏—Ö –æ–±—â–µ—Å—Ç–≤ –¥–ª—è –ø–∞–π—â–∏–∫–æ–≤, –∫–æ–Ω–µ—á–Ω–æ, –Ω–µ–ª—å–∑—è. –ù–æ —Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç—Å—è –ø–µ—Ä–µ–¥ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞–º–∏, —Å–ø–æ—Å–æ–±–Ω—ã —Å–µ—Ä—å–µ–∑–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å –í–∞—à–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –æ –±–∏–∑–Ω–µ—Å–µ.";
            
        $InlineKeyboardMarkup = [
            'inline_keyboard' => [[[
                'text' => '–ß–∏—Ç–∞—Ç—å –¥–∞–ª–µ–µ',
                'callback_data' => 'cooperation_str2'
            ]]]
        ];
        $bot->sendMessage($chat_id, $send, null, $InlineKeyboardMarkup);

        return;
    }
    

    /***********************
    
           –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø

    ************************/
    if ($text == "/regist" || $text == "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è" || $text == "–®–∞–≥ –Ω–∞–∑–∞–¥")
    {
        $send = "–°—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–≤–∞ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ —Å–∞–π—Ç–µ –ë—É–¥—å-–∑–¥–æ—Ä–æ–≤.—Ä—É—Å:

            1.    –£–ø—Ä–æ—â—ë–Ω–Ω–∞—è 
            2.    –ü–æ–ª–Ω–∞—è

        –£–ø—Ä–æ—â—ë–Ω–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –í–∞–º –¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑—ã –∏–∑ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ –Ω–∞ —Å–∞–π—Ç–µ, –Ω–æ –±–µ–∑ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å–∫–∏–¥–æ–∫ –∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π.
        
        –ß—Ç–æ –±—ã —É–∑–Ω–∞—Ç—å –∫–∞–∫–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–∞—ë—Ç ‚Äú[–ü–æ–ª–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è](https://–±—É–¥—å-–∑–¥–æ—Ä–æ–≤.—Ä—É—Å/web/category/454)‚Äù üëà –ø—Ä–æ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ.";
        
        $KeyboardMarkup = [
            'keyboard' => [
                [
                    [ 'text' => '–£–ø—Ä–æ—â—ë–Ω–Ω–∞—è' ],
                    [ 'text' => '–ü–æ–ª–Ω–∞—è' ],
                ],
                [
                    [ 'text' => '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é' ],
                ]
            ],
            'resize_keyboard' => true
        ];

        $bot->sendMessage($chat_id, $send, "markdown", $KeyboardMarkup);

        return;
    }


    /***********************
    
     –£–ü–†–û–©–Å–ù–ù–ê–Ø —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è

    ************************/
    if ($text == "–£–ø—Ä–æ—â—ë–Ω–Ω–∞—è")
    {
        $send = "–£–≤–∞–∂–∞–µ–º—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.";

        $KeyboardMarkup = [
            'keyboard' => [
                [
                    [ 'text' => '–®–∞–≥ –Ω–∞–∑–∞–¥' ],
                ]
            ],
            'resize_keyboard' => true
        ];

        $bot->sendMessage($chat_id, $send, "markdown", $KeyboardMarkup);

        $send = "–ü–µ—Ä–µ–π–¥—è –∫ –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –≤—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω–æ–µ –º–µ—Å—Ç–æ (–∞–¥—Ä–µ—Å) –ø–æ–ª—É—á–µ–Ω–∏—è  –∑–∞–∫–∞–∑–æ–≤, —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ—ë –∏–º—è –∏ –æ—Ç—á–µ—Å—Ç–≤–æ, –∞ —Ç–∞–∫ –∂–µ  —Ç–µ–ª–µ—Ñ–æ–Ω –¥–ª—è —Å–≤—è–∑–∏.";
        
        $InlineKeyboardMarkup = [
            'inline_keyboard' => [[[
                'text' => '–ü–µ—Ä–µ–π—Ç–∏ –∫ –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏',
                'url' => "https://–ë—É–¥—å-–∑–¥–æ—Ä–æ–≤.—Ä—É—Å/web/profile/register-small?tg=".$chat_id
            ]]]
        ];
        $bot->sendMessage($chat_id, $send, null, $InlineKeyboardMarkup);

        return;
    }

    
    /*******************
    
     –ü–û–õ–ù–ê–Ø —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è

    ********************/
    if ($text == "–ü–æ–ª–Ω–∞—è")
    {
        $send = "–£–≤–∞–∂–∞–µ–º—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.";

        $KeyboardMarkup = [
            'keyboard' => [
                [
                    [ 'text' => '–®–∞–≥ –Ω–∞–∑–∞–¥' ],
                ]
            ],
            'resize_keyboard' => true
        ];

        $bot->sendMessage($chat_id, $send, "markdown", $KeyboardMarkup);
        
        $send = "–ü–µ—Ä–µ–π–¥—è –∫ –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –≤–≤–µ–¥–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –æ–Ω–∏ –ø–æ–º–µ—á–µ–Ω—ã –∫—Ä–∞—Å–Ω–æ–π –∑–≤—ë–∑–¥–æ—á–∫–æ–π.";
        
        $InlineKeyboardMarkup = [
            'inline_keyboard' => [[[
                'text' => '–ü–µ—Ä–µ–π—Ç–∏ –∫ –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏',
                'url' => "https://–ë—É–¥—å-–∑–¥–æ—Ä–æ–≤.—Ä—É—Å/web/profile/register?tg=".$chat_id
            ]]]
        ];
        $bot->sendMessage($chat_id, $send, null, $InlineKeyboardMarkup);

        return;
    }
        
    
    /*********
    
     –ù–û–í–ò–ß–ö–ê–ú

    *********/
    if ($text == "/newbie" || $text == "–ù–æ–≤–∏—á–∫–∞–º" || $text == "/new")
    {    
        $send = "–î–æ—Ä–æ–≥–æ–π –¥—Ä—É–≥, –º—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º —Ç–µ–±—è –Ω–∞ –Ω–∞—à–µ–º –æ–±—â–µ–º –∏ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ. üåà
        –°–µ—Ä–¥–µ—á–Ω–æ ‚ù§Ô∏è –ë–ª–∞–≥–æ–î–∞—Ä–∏–º —Ç–µ–±—è –∑–∞ –ø—Ä–∏–Ω—è—Ç–æ–µ —Ä–µ—à–µ–Ω–∏–µ, –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è. 
        –í–º–µ—Å—Ç–µ –º—ã —Å–º–æ–∂–µ–º –±–æ–ª—å—à–µ–µ!üåü
        
        ";
               
        $ReplyKeyboardMarkup = [
            'keyboard' => [
                [
                    [ 'text' => '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è' ],
                    [ 'text' => '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è' ]
                ],
                [
                    [ 'text' => 'üåü–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é' ]
                ]
            ],
            'resize_keyboard' => true,
            'selective' => true,
        ];        
        $bot->sendMessage($chat_id, $send, null, $ReplyKeyboardMarkup);

        $send = "–ù–∏–∂–µ, –≤ \"–ú–µ–Ω—é\" —Ç—ã —Å–º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –≤—Å—é, –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω—É–∂–Ω—ã—Ö —Ç–µ–±–µ –¥–µ–π—Å—Ç–≤–∏–π –∏ –ø—Ä–æ–π—Ç–∏ \"–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é\".
        
        –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–≤–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –¥–ª—è —Å–≤—è–∑–∏ —á–µ—Ä–µ–∑ –¢–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ  üëá";

        $InlineKeyboardMarkup = [
            'inline_keyboard' => [[[
                'text' => '–£–∑–Ω–∞—Ç—å —Å–≤–æ–π –Ω–æ–º–µ—Ä',
                'callback_data' => 'client_id'
            ]]]
        ];
        $bot->sendMessage($chat_id, $send, null, $InlineKeyboardMarkup);

        return;
    }

    /***************************
    
            –ü–†–ò–í–ï–¢–°–¢–í–ò–ï 

    ****************************/
    if ($text == "/hello" || $text == "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ")
    {    
        $file_id = "BAACAgIAAxkBAAIHGWTm_pIWtP7sItX4-diNDV-tgVGZAAL1MgACxgQ5S7UZOXKYTDdCMAQ";
               
        $ReplyKeyboardMarkup = [
            'keyboard' => [
                [
                    [ 'text' => '–û –Ω–∞—Å' ],
                    [ 'text' => '–ù–∞–∑–∞–¥' ]
                ]
            ],
            'resize_keyboard' => true,
            'selective' => true,
        ];        
        $bot->sendVideo($chat_id, $file_id, null, null, $ReplyKeyboardMarkup);

        return;
    }

    /************
    
        –û –ù–ê–°

    *************/
    if ($text == "/about" || $text == "–û –Ω–∞—Å")
    {    
        $send = "–ö–æ—Ä–æ—Ç–∫–æ –æ –Ω–∞—Å.";
        
        $ReplyKeyboardMarkup = [
            'keyboard' => [
                [
                    [ 'text' => '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ' ],
                    [ 'text' => '–ù–∞–∑–∞–¥' ]
                ]
            ],
            'resize_keyboard' => true,
            'selective' => true,
        ];        
        $bot->sendMessage($chat_id, $send, null, $ReplyKeyboardMarkup);

        $send = "–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–æ–µ –æ–±—â–µ—Å—Ç–≤–æ (–ü–û) ¬´–ë—É–¥—å –∑–¥–æ—Ä–æ–≤¬ª —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç –≤ —Å. –î–º–∏—Ç—Ä–∏–µ–≤—ã –≥–æ—Ä—ã –ú–µ–ª–µ–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Ä–∞–π–æ–Ω–∞ –í–ª–∞–¥–∏–º–∏—Ä—Å–∫–æ–π –æ–±–ª., –æ–±—Ä–∞–∑–æ–≤–∞–Ω–æ –≤ 2023 –≥–æ–¥–∞. 
        –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–æ–µ –æ–±—â–µ—Å—Ç–≤–æ, —è–≤–ª—è–µ—Ç—Å—è –Ω–µ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–µ–π –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∫–ª—É–±–∞.
        –û—Å–Ω–æ–≤–Ω—ã–º–∏ —Ü–µ–ª—è–º–∏ –û–±—â–µ—Å—Ç–≤–∞ —è–≤–ª—è—é—Ç—Å—è:
        –ü—Ä–æ–ø–∞–≥–∞–Ω–¥–∞ –∑–¥–æ—Ä–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏ –∏ –∑–¥–æ—Ä–æ–≤—å—è –¥–ª—è —Å–≤–æ–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.
        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –û–±—â–µ—Å—Ç–≤–∞ —è–≤–ª—è—é—Ç—Å—è –ø—Ä–æ–¥–æ–≤–æ–ª—å—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã. 
         
        –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–∏ –æ—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö (–º–µ—Å—Ç–Ω—ã—Ö) —Ç–æ–≤–∞—Ä–æ–≤ –∏ —É—Å–ª—É–≥, –ø—Ä–µ–¥–ª–∞–≥–∞—é—Ç –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—É—é –ø—Ä–æ–¥—É–∫—Ü–∏—é —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –û–±—â–µ—Å—Ç–≤–∞ –ø–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º —Ü–µ–Ω–∞–º.
        –û–±—â–µ—Å—Ç–≤–æ —Å–æ —Å–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω—ã –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª—å –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ü–µ–Ω—ã –∏ –∫–∞—á–µ—Å—Ç–≤–∞.";
               
        $InlineKeyboardMarkup = [
            'inline_keyboard' => [[[
                'text' => '–ß–∏—Ç–∞—Ç—å –¥–∞–ª–µ–µ',
                'callback_data' => 'about_str2'
            ]]]
        ];  
        $bot->sendMessage($chat_id, $send, null, $InlineKeyboardMarkup);

        return;
    }
    

    
    
    /******************************
    
        –ó–ê–ö–£–ü–ö–ò, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–º–∏

    *******************************/
    if ($text == "/purchase_date" || $text == "–î–∞—Ç—ã –∑–∞–∫—É–ø–æ–∫" || $text == "–ó–∞–∫—É–ø–∫–∏" || $text == "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –¥–∞—Ç—ã –∑–∞–∫—É–ø–æ–∫")
    {    
        $user = User::findOne(['tg_id' => $chat_id, 'disabled' => 0]);
        
        
        if ($user->role == User::ROLE_ADMIN || $user->role == User::ROLE_SUPERADMIN || $chat_id == $admin || $chat_id == $master) 
        {
            // –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤

            $providers = Provider::find()->where(['purchases_management' => 1])->all();

            $send = "–ü–µ—Ä–µ—á–µ–Ω—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ —Å —Ä—É—á–Ω—ã–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –∑–∞–∫—É–ø–∫–∞–º–∏.";
                    
            $inline_keyboard = [];

            foreach ($providers as $provider) {
                array_push($inline_keyboard, [
                    [
                        'text' => $provider->name,
                        'callback_data' => 'providerpurchases_' . $provider->id
                    ]
                ]);
            }

            $InlineKeyboardMarkup = [
                'inline_keyboard' => $inline_keyboard
            ];  
            $bot->sendMessage($chat_id, $send, null, $InlineKeyboardMarkup);
            
        }else if ($user->role != User::ROLE_PROVIDER || $chat_id == "351009636") 
        {            
            // –¥–ª—è –ø–∞–π—â–∏–∫–æ–≤

            $products = PurchaseProduct::find()->where(['status' => 'advance'])->all();

            if ( ! $products[0] ) {
                $send = "–ù–µ—Ç –¥–µ–π—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–∫—É–ø–æ–∫.";
                $bot->sendMessage($chat_id, $send);
                return;
            }
            
            // $provider = Provider::findOne($provider_id);

            $allCategories = [];
            foreach($products as $product) {
                $feature_id = $product->product_feature_id;
                $product_feature = ProductFeature::findOne($feature_id);
                $real_product_id = $product_feature->product_id;
                $real_product = Product::findOne($real_product_id);
                if ($real_product->visibility == 0) continue;
                $categoryHasProduct = CategoryHasProduct::findOne(['product_id' => $real_product_id]);
                $category_id = $categoryHasProduct->category_id;
                $category = Category::findOne($category_id);
                $yes = false;
                foreach($allCategories as $oneCategory) {
                    if ($oneCategory['category_id'] == $category_id && $oneCategory['purchase_date'] == strtotime($product->purchase_date)) $yes = true;
                }
                if ( ! $yes ) $allCategories[] = [
                    'category_id' => $category_id, 
                    'category_name' => $category->name,
                    'purchase_id' => $product->id, 
                    'purchase_date' => strtotime($product->purchase_date), 
                ];
            }

            usort($allCategories, function($a, $b) {
                if ($a['category_name'] > $b['category_name']) {
                    return 1;
                } elseif ($a['category_name'] < $b['category_name']) {
                    return -1;
                }
                return 0;
            });

            usort($allCategories, function($a, $b) {
                if ($a['purchase_date'] > $b['purchase_date']) {
                    return 1;
                } elseif ($a['purchase_date'] < $b['purchase_date']) {
                    return -1;
                }
                return 0;
            });

            $send = "–û–±—â–∏–π —Å–ø–∏—Å–æ–∫ –ó–∞–∫—É–ø–æ–∫.";
            
            $inline_keyboard = [];
            foreach($allCategories as $oneCategory) {
                $text =  $oneCategory['category_name'] . " " . date('d.m.Y', $oneCategory['purchase_date']); 
            
                $inline_keyboard[] = [
                    [
                        'text' => $text,
                        'callback_data' => 'listOfPurchases_' . $oneCategory['purchase_id']
                    ],
                ];
            }
            
            $InlineKeyboardMarkup = [
                'inline_keyboard' => $inline_keyboard
            ];
            $bot->sendMessage($chat_id, $send, null, $InlineKeyboardMarkup);    
        
        } 
        
        return;
    }


    /***********************************
    
           –ó–ê–ö–£–ü–ö–ò –ø–æ –Ω–∞—á–∞—Ç–æ–π –¥–∞—Ç–µ 

    ************************************/
    if ($text == "/purchases_by_the_started_date" || $text == "–í—Å–µ –∑–∞–∫—É–ø–∫–∏ –ø–æ –Ω–∞—á–∞—Ç–æ–π –¥–∞—Ç–µ")
    {    
        continueSelection($bot, $chat_id, /*purchases_by_the_started_date=*/true);

        return;
    }


    /**********************
    
            –ö–û–†–ó–ò–ù–ê 

    ***********************/
    if ($text == "/cart" || $text == "–ö–æ—Ä–∑–∏–Ω–∞" || $text == "–∫–æ—Ä–∑–∏–Ω–∞")
    {    
        getCart($bot, $chat_id);

        return;
    }



    /******************************************
    
        –ï–°–õ–ò –ü–†–ò–°–õ–ê–õ–ò –û–¢–í–ï–¢–ù–û–ï –°–û–û–ë–©–ï–ù–ò–ï (reply)

    *******************************************/
	if ($reply_to_message && $chat_id == $admin) {
        if ($caption) {            
            // $caption = str_replace("\r\n", "", $caption);
            $reply_id = substr($caption, 0, strpos($caption, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞!"));
        }else
        if ($reply_text) {            
            // $reply_text = str_replace("\r\n", "", $reply_text);
            $reply_id = substr($reply_text, 0, strpos($reply_text, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞!"));
        }

        if ($reply_id) {
             if ($text) {
                $bot->sendMessage($reply_id, $chat_id . "\r\n–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!\r\n\r\n" . $text);
                $bot->sendMessage($admin, "–°–æ–æ–±—â–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!");
            }else if ($voice) {
                $bot->sendVoice($reply_id, $file_id, $chat_id . "\r\n–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!");
                $bot->sendMessage($admin, "–°–æ–æ–±—â–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!");
            }else {
                $bot->sendMessage($admin, "–ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∏ –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è!");
            }
        }
        return;
    }
        


    /******************************************
    
        –ï–°–õ–ò –ü–†–ò–°–õ–ê–õ–ò –ù–ï–ò–ó–í–ï–°–¢–ù–û–ï –°–û–û–ë–©–ï–ù–ò–ï

    *******************************************/
    $tgCom = TgCommunication::findOne(['chat_id' => $chat_id]);

    if ($tgCom) { // –µ—Å–ª–∏ –µ—Å—Ç—å –∑–∞–ø–∏—Å—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–ø–∏—Å–∫—É
        
        $user = User::findOne(['tg_id' => $chat_id, 'disabled' => 0]);

        // —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞ –∏ –∑–∞–∫—É–ø–∫–∏
        if (strstr($tgCom->from_whom, '_', true) == 'editpriceproduct') 
        {
            $array = explode('_', $tgCom->from_whom);        
            $product_feature_id = $array[1];

            $price = $text;

            if ( ! is_numeric($price)) {
                $bot->sendMessage($chat_id, "–ù–µ –≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —á–∏—Å–ª–∞");
                return;
            }

            $productFeature = ProductFeature::findOne($product_feature_id); 

            $product = Product::findOne($productFeature->product_id);
            $product_id = $product->id;
            $productPrice = ProductPrice::findOne(['product_feature_id' => $product_feature_id]);
            if ( ! $productPrice )
            {
                $productPrice = new ProductPrice();
                $productPrice->product_id = $product_id;
                // $productFeature = ProductFeature::findOne(['product_id' => $product_id]); 
                $productPrice->product_feature_id = $productFeature->id;
            }
            $productPrice->purchase_price = $price;
            $funds = Fund::find()->all();
            $percents = 0;
            foreach($funds as $fund) $percents = $percents + $fund->percent;
            $member_price = $price + ($price/100*$percents);
            $member_price = round($member_price, 2);
            $productPrice->member_price = $member_price;
            $price_all = $member_price + ($member_price/100*25);
            $price_all = round($price_all, 2);
            $productPrice->price = $price_all;
            if ( ! $productPrice->save() ) {
                $send = "–û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã " . $product->name;
                $bot->sendMessage($chat_id, $send);
            }else {
                $send = "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã –Ω–∞ " . $product->name . ", –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ";
                $bot->sendMessage($chat_id, $send);

                $productFeatures = ProductFeature::find()->where(['product_id' => $product_id])->all(); 
                foreach($productFeatures as $productFeature) {
                    $purchaseProduct = PurchaseProduct::find()->where(['product_feature_id' => $productFeature->id])->andWhere(['status' => 'abortive'])->one();
                    if ($purchaseProduct)
                    {
                        $purchaseProduct->summ = $price;
                        $purchaseProduct->save();
                    }
                }
            }
            
            $tgCom->delete();
              
            $providerHasProduct = ProviderHasProduct::findOne(['product_id' => $product_id]);
            $provider_id = $providerHasProduct->provider_id;            
            $step = 1;

/*
            –≠—Ç–∞ —á–∞—Å—Ç—å –∏–∑ callbaqckQuery
            –£–ü–†–ê–í–õ–ï–ù–ò–ï –¶–ï–ù–ê–ú–ò –ó–ê–ö–£–ü–û–ö
*/
            editPricePurchase($bot, $chat_id, $provider_id, $step);
            
            return;
        }
        

        // –ø—Ä–∏–Ω—è—Ç–∏–µ –Ω–æ–≤–æ–π –¥–∞—Ç—ã –∑–∞–∫–∞–∑–∞
        if (strstr($tgCom->from_whom, '_', true) == 'editstopdate') 
        {
            $array = explode('_', $tgCom->from_whom);        
            $provider_id = $array[1];

            $send = $text . "\r\n–î–∞—Ç–∞ –ø—Ä–∏–Ω—è—Ç–∞\r\n\r\n–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É ‚Äú–î–æ—Å—Ç–∞–≤–∫–∏‚Äù –≤ —Ñ–æ—Ä–º–∞—Ç–µ: 15.11.2023";

            $date_timestamp = strtotime($text);
            if ( ! $date_timestamp ) {
                $bot->sendMessage($chat_id, "–ù–µ –≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã");            
                return;
            }
            
            $tgCom->from_whom = "editpurchasedate_" . $provider_id . "_" . $date_timestamp;
                
            $tgCom->save();
            $bot->sendMessage($chat_id, $send);
            
            return;
        }
        
        // —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–∫—É–ø–∫–∏
        if (strstr($tgCom->from_whom, '_', true) == 'editpurchasedate') 
        {            
            $array = explode('_', $tgCom->from_whom);
            $provider_id = $array[1];            
            $stop_date = date('d.m.Y', $array[2]);
            $purchase_date = $text;
            
            if ( ! strtotime($purchase_date)) {
                $bot->sendMessage($chat_id, "–ù–µ –≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã");            
                return;
            }            
            
            if ( ! $provider_id) {
                $bot->sendMessage($chat_id, "–û—Ç—Å—É—Ç—Å–≤—É—é—Ç –¥–∞–Ω–Ω—ã–µ: provider_id = null");            
                return;
            }      

            $provider = Provider::findOne($provider_id);
            $products = PurchaseProduct::find()->where(['provider_id' => $provider_id])->andWhere(['!=', 'status', 'held'])->all();
            
            foreach($products as $product) {
                $product->created_date = date('Y-m-d');
                $product->purchase_date = date('Y-m-d', strtotime($purchase_date));
                $product->stop_date = date('Y-m-d', strtotime($stop_date));
                $product->status = 'advance';
                $product->save();
            }

            $product = $products[0];

            // $feature_id = $product->product_feature_id;
            // $product_feature = ProductFeature::findOne($feature_id);
            // $real_product_id = $product_feature->product_id;
            // $real_product = Product::findOne($real_product_id);
            // $categoryHasProduct = CategoryHasProduct::findOne(['product_id' => $real_product_id]);
            // $category_id = $categoryHasProduct->category_id;
            // $category = Category::findOne($category_id);

            $send = date('d.m.Y') . "–≥., –≤–Ω–µ—Å–µ–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤ –≥—Ä–∞—Ñ–∏–∫ –∑–∞–∫—É–ø–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ ";
            $send .= $provider->name . "\r\n";
            $send .= "–°—Ç–æ–ø –∑–∞–∫–∞–∑ ".$stop_date."–≥. –≤ 21 —á–∞—Å.\r\n";
            $send .= "–î–æ—Å—Ç–∞–≤–∫–∞  ".$purchase_date."–≥."; 

            $InlineKeyboardMarkup = [
                'inline_keyboard' => [
                    [
                        [
                            'text' => '–£–≤–µ–¥–æ–º–∏—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞',
                            'callback_data' => 'notifyprovider_' . $provider_id
                        ],
                    ],
                    [
                        [
                            'text' => "–£–≤–µ–¥–æ–º–∏—Ç—å –ø–∞–π—â–∏–∫–æ–≤",
                            'callback_data' => 'notifyShareholders_' . $provider_id
                        ],
                    ],
                    [
                        [
                            'text' => '–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—ã',
                            'callback_data' => 'editdatepurchase_' . $provider_id
                        ],
                    ],
                ]
            ];

            $bot->sendMessage($chat_id, $send, null, $InlineKeyboardMarkup);
            $tgCom->delete();

            return;
        }

        
        // –∑–∞–ø—Ä–æ—Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª–æ–∂–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
        if (strstr($tgCom->from_whom, '_', true) == 'putInTheBasket') 
        {            
            $array = explode('_', $tgCom->from_whom);
            $product_feature_id = $array[1];
            $quantity = $text;
            if ( ! is_numeric($quantity) || $quantity < 1){
                $bot->sendMessage($chat_id, "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ!");            
                return;
            }            

            putInTheBasket($bot, $chat_id, $product_feature_id, $quantity);
            $tgCom->delete();

            return;
        }

        
        if ( ! $tgCom->from_whom || $tgCom->from_whom == "client") {
            if ( ! $user || $user->lastname == "lastname") {
                $send = "–ù–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å". "\r\n\r\n" . $text;
            }else {
                // $send = "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚Ññ" . $chat_id . "\r\n\r\n" . $text;
                $send = "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞" . "\r\n\r\n" . $text;                  
            }     
        }else {
            $send = "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞" . "\r\n\r\n" . $text;
        }
                     
        $InlineKeyboardMarkup = [
            'inline_keyboard' => [
                [
                    [
                        'text' => '–û—Ç–≤–µ—Ç–∏—Ç—å',
                        'callback_data' => 'otvetit_' . $chat_id
                    ],
                ],
            ]
        ];

        $bot->sendMessage($tgCom->to_chat_id, $send, null, $InlineKeyboardMarkup);
        // $bot->sendMessage($tgCom->to_chat_id, $send);

        if ($tgCom->from_whom && $tgCom->from_whom == "specialist") {
            $send = "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ";
        }else {
            $send = "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å –≤–∞–º–∏ —Å—Ä–∞–∑—É —Å–≤—è–∂–µ—Ç—Å—è";
        }

        $bot->sendMessage($chat_id, $send);
        $tgCom->delete();

        return;
    }

    
    if ($chat_id != $admin) {

        $send = "–í—ã –∂–µ–ª–∞–µ—Ç–µ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å?";

        $InlineKeyboardMarkup = [
            'inline_keyboard' => [[
                [
                    'text' => '–î–∞',
                    'callback_data' => 'question_yes'
                ],
                [
                    'text' => '–ù–µ—Ç',
                    'callback_data' => 'question_no'
                    ],
            ]]
        ];  
        $bot->sendMessage($chat_id, $send, null, $InlineKeyboardMarkup, $message_id);
		
        return;
		
	}else {        
        $bot->sendMessage($chat_id, "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ù–ï –ë–£–î–ï–¢ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É!\r\n\r\n–í—ã –∏ –µ—Å—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!!!");
		
        return;
    }


}


/*
$ReplyKeyboardRemove = [
    'remove_keyboard' => true
];

$HideKeyboard = [
    'hide_keyboard' => true
];
*/
// [–ü–æ–ª–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è](https://–ë—É–¥—å-–∑–¥–æ—Ä–æ–≤.—Ä—É—Å/web/profile/register?tg=".$chat_id.")

// $bot->forwardMessage($admin_id, $chat_id, $message_id);
// $bot->copyMessage($admin_id, $chat_id, $message_id);


