<?php

namespace app\modules\bots\controllers;

use Yii;
use yii\web\Controller;
use app\modules\bots\api\Bot;
use app\models\User;
use app\models\Forgot;
use app\models\Email;



class DefaultController extends Controller
{
    // –º–æ–∂–Ω–æ —Ç–∞–∫ –æ—Ç–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É csrf-—Ç–æ–∫–µ–Ω–∞
    public $enableCsrfValidation = false;

    // –æ–±—Ä–∞–±–æ—Ç–∫–∞ —ç–∫—à–∏–Ω–æ–≤ –¥–æ –∑–∞–ø—É—Å–∫–∞
    // public function beforeAction($action)
    // {
    //     if ($action->id == 'index') {
    //         // –∞, –º–æ–∂–Ω–æ —Ç–∞–∫ –æ—Ç–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É csrf-—Ç–æ–∫–µ–Ω–∞, –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —ç–∫—à–µ–Ω–∞
    //         Yii::$app->controller->enableCsrfValidation = false;
    //     }

    //     return parent::beforeAction($action);
    // }    
    
    public function actionIndex()
    {
        $config = require(__DIR__ . '/../../../config/constants.php');
        $web = $config['WEB'];
        $token = $config['BOT_TOKEN'];

        $master = Yii::$app->params['masterChatId']; 

        $bot = new Bot($token);

        $request = Yii::$app->request;
        
        $get = $request->get();

        if ($_SERVER['REQUEST_METHOD'] === 'POST') {
            $post = $request->post();
            if ($post) {
                $bot->sendMessage($master, "–ø–æ—Å—Ç");
            }else {
                $data = $bot->init('php://input');
                if ($data) {                     
                    // -----------------------------------------
                    // —Ç—É—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –±–æ—Ç–∞!!!
                    // -----------------------------------------
                    $from_id = null;
                    if (isset($data['message'])) $from_id = $data['message']['from']['id'];
                    else if (isset($data['callback_query'])) $from_id = $data['callback_query']['from']['id'];
                    // if ($from_id && $from_id == $master) {
                    //     $bot->sendMessage($from_id, $bot->PrintArray($data));
                    // } 
                    $bot->sendMessage($master, $bot->PrintArray($data));
                    // -----------------------------------------
                    requestProcessing($bot);
                    // -----------------------------------------
                }else {
                    $bot->sendMessage($master, "–ø–æ—Å—Ç –ø—É—Å—Ç");
                }
            }
            return "ok";
        }else {
            if ($get) {
                if (isset($get['url'])) {
                    $url = "https://xn----9sbegbr4cary4h.xn--p1acf/web/bots";
                    $response = $bot->setWebhook($url); // $get['url']
                    $bot->sendMessage($master, "set webhook");
                    return "set webhook";
                }else {
                    if (isset($get['message'])) {
                        $bot->sendMessage($master, $get['message']);
                    }else{
                        $bot->sendMessage($master, "–≥–µ—Ç");
                    }
                    return "–ü–æ—Å—Ç—É–ø–∏–ª –≥–µ—Ç –∑–∞–ø—Ä–æ—Å!";
                }
            }else {
                $bot->sendMessage($master, "–≥–µ—Ç –ø—É—Å—Ç");
                return "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!";
            }
        }

        
        $response = file_get_contents("https://api.telegram.org/bot". $token ."/getMe");
        // json_encode - –∏–∑ –æ–±—ä–µ–∫—Ç–∞ –≤ —Å—Ç—Ä–æ–∫—É
        // json_decode - –∏–∑ —Å—Ç—Ä–æ–∫–∏ –≤ –æ–±—ä–µ–∫—Ç
        $response = json_decode($response, true);
        if ($response->ok) {            
            // mb_convert_encoding($str, "UTF8"); - –ø–µ—Ä–µ–≤–æ–¥ –∏–∑ —é–Ω–∏–∫–æ–¥–∞ –≤ UTF-8
            $first_name = mb_convert_encoding($response->result->first_name, "UTF8");
            return $first_name;
            // return json_encode($response->result);
            // return json_encode($response);
        }
        return "–û—à–∏–±–∫–∞!";        
    }

    //
    public function actionTest()
    {
        // –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞ –ª–∏–Ω–∏–∏, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–∞—è –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
        $InlineKeyboardMarkup = [
            'inline_keyboard' => [
                [
                    [
                        'text' => '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
                        'callback_data' => 'information',
                        'url' => null,
                        'login_url' => null,
                        'switch_inline_query' => null,
                        'switch_inline_query_current_chat' => null,
                        'callback_game' => null,
                        'pay' => false
                    ]
                ]
            ]
        ];

        return "ok";
    }



}


function requestProcessing($bot) {
    $data = $bot->data;

    if (isset($data['message'])) {
        requestMessage($bot, $data['message']);
    }else if (isset($data['callback_query'])) {
        requestCallbackQuery($bot, $data['callback_query']);
    }    
}

function requestMessage($bot, $message) {
    $from = $message['from'];
        $first_name = $from['first_name'];
    $chat = $message['chat'];
        $chat_id = $chat['id'];
    $text = $message['text'];

    if ($text == "/start" || $text == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" || $text == "–ù–∞–∑–∞–¥")
    {    
        $send = "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π " . $first_name . "!\r\n\r\n";
               
        $ReplyKeyboardMarkup = [
            'keyboard' => [
                [
                    [ 'text' => '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è' ],
                    [ 'text' => '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è' ]
                ]
            ],
            'resize_keyboard' => true,
            'selective' => true,
        ];        
        $bot->sendMessage($chat_id, $send, null, $ReplyKeyboardMarkup);

        $send = "–î–æ—Ä–æ–≥–æ–π –¥—Ä—É–≥, –º—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º —Ç–µ–±—è –Ω–∞ –Ω–∞—à–µ–º –æ–±—â–µ–º –∏ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ. üåà
        –°–µ—Ä–¥–µ—á–Ω–æ ‚ù§Ô∏è –ë–ª–∞–≥–æ–î–∞—Ä–∏–º —Ç–µ–±—è –∑–∞ –ø—Ä–∏–Ω—è—Ç–æ–µ —Ä–µ—à–µ–Ω–∏–µ, –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è. 
        –í–º–µ—Å—Ç–µ –º—ã —Å–º–æ–∂–µ–º –±–æ–ª—å—à–µ–µ!üåü
        
        –ù–∏–∂–µ, –≤ \"–ú–µ–Ω—é\" —Ç—ã —Å–º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –≤—Å—é, –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω—É–∂–Ω—ã—Ö —Ç–µ–±–µ –¥–µ–π—Å—Ç–≤–∏–π –∏ –ø—Ä–æ–π—Ç–∏ \"–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é\".
        
        –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–≤–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –¥–ª—è —Å–≤—è–∑–∏ —á–µ—Ä–µ–∑ –¢–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª–∞, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ  üëá";

        $InlineKeyboardMarkup = [
            'inline_keyboard' => [[[
                'text' => '–£–∑–Ω–∞—Ç—å —Å–≤–æ–π –Ω–æ–º–µ—Ä',
                'callback_data' => 'client_id'
            ]]]
        ];
        $bot->sendMessage($chat_id, $send, null, $InlineKeyboardMarkup);
        return;
    }

    $text_split = explode(" ", $text);

    if ($text_split[0] == "/start" && $text_split[1]) {
        if ($text_split[1] == "forgot") {

            $user = User::findOne(['tg_id' => $chat_id, 'disabled' => 0]);

            if (!$user) {
                $bot->sendMessage($chat_id, "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã!");
                return;
            }

            $forgot = Forgot::findOne(['user_id' => $user->id]);
            if (!$forgot) {
                $forgot = new Forgot();
                $forgot->user_id = $user->id;
            }
            $forgot->save();

            Email::tg_send('forgot-tg', $chat_id, ['url' => $forgot->url]);

        }else {

            $send = "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π " . $first_name . "!\r\n\r\n";
            $send .= "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, —ç—Ç–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ —Å–∞–π—Ç–µ –ë—É–¥—å-–ó–¥–æ—Ä–æ–≤.—Ä—É—Å.\r\n";
            $send .= "–í –±–æ—Ç–µ –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã. –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ (–ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∞ –∫ —ç—Ç–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é).";
            $host = "https://–±—É–¥—å-–∑–¥–æ—Ä–æ–≤.—Ä—É—Å/web";
            // $host = "http://localhost:8080";
            if ($text_split[1] == "member") $action = "register";
            else if ($text_split[1] == "provider") $action = "register-provider";
            $url = "$host/profile/$action?tg=$chat_id";
            $InlineKeyboardMarkup = [
                'inline_keyboard' => [[[
                    'text' => '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å',
                    'url' => "$url"
                ]]]
            ];
            $bot->sendMessage($chat_id, $send, null, $InlineKeyboardMarkup);
                
        }
    }

    
    if ($text == "–ü–æ–º–æ—â—å" || $text == "/help")
    {
        $send = "–ö–æ–º–∞–Ω–¥–∞ '–ü–æ–º–æ—â—å' –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ";
        $bot->sendMessage($chat_id, $send);
    }
    
    if ($text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è" || $text == "/info")
    {
        $send = "–ö–æ–º–∞–Ω–¥–∞ '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è' –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ";
        $bot->sendMessage($chat_id, $send);
    }
    
    if ($text == "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è" || $text == "/regist")
    {
        $send = "–°—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–≤–∞ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ —Å–∞–π—Ç–µ –ë—É–¥—å-–∑–¥–æ—Ä–æ–≤.—Ä—É—Å:

            1.    –£–ø—Ä–æ—â—ë–Ω–Ω–∞—è 
            2.    –ü–æ–ª–Ω–∞—è

        –£–ø—Ä–æ—â—ë–Ω–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –í–∞–º –¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑—ã –∏–∑ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ –Ω–∞ —Å–∞–π—Ç–µ, –Ω–æ –±–µ–∑ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å–∫–∏–¥–æ–∫ –∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π.
        
        –ß—Ç–æ –±—ã —É–∑–Ω–∞—Ç—å –∫–∞–∫–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–∞—ë—Ç ‚Äú[–ü–æ–ª–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è](https://–±—É–¥—å-–∑–¥–æ—Ä–æ–≤.—Ä—É—Å/web/category/454)‚Äù üëà –ø—Ä–æ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ.";
        
        $KeyboardMarkup = [
            'keyboard' => [
                [
                    [ 'text' => '–£–ø—Ä–æ—â—ë–Ω–Ω–∞—è' ],
                    [ 'text' => '–ü–æ–ª–Ω–∞—è' ],
                ],
                [
                    [ 'text' => '–ù–∞–∑–∞–¥' ],
                ]
            ],
            'resize_keyboard' => true
        ];

        $bot->sendMessage($chat_id, $send, "markdown", $KeyboardMarkup);
    }

    if ($text == "–£–ø—Ä–æ—â—ë–Ω–Ω–∞—è")
    {
        $send = "–ü–µ—Ä–µ–π–¥—è –∫ –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –≤—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω–æ–µ –º–µ—Å—Ç–æ (–∞–¥—Ä–µ—Å) –ø–æ–ª—É—á–µ–Ω–∏—è  –∑–∞–∫–∞–∑–æ–≤, —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ—ë –∏–º—è –∏ –æ—Ç—á–µ—Å—Ç–≤–æ, –∞ —Ç–∞–∫ –∂–µ  —Ç–µ–ª–µ—Ñ–æ–Ω –¥–ª—è —Å–≤—è–∑–∏.";
        
        $InlineKeyboardMarkup = [
            'inline_keyboard' => [[[
                'text' => '–ü–µ—Ä–µ–π—Ç–∏ –∫ –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏',
                'url' => "https://–ë—É–¥—å-–∑–¥–æ—Ä–æ–≤.—Ä—É—Å/web/profile/register?tg=".$chat_id
            ]]]
        ];
        $bot->sendMessage($chat_id, $send, null, $InlineKeyboardMarkup);
    }

    if ($text == "–ü–æ–ª–Ω–∞—è")
    {
        $send = "–ü–µ—Ä–µ–π–¥—è –∫ –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –≤–≤–µ–¥–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –æ–Ω–∏ –ø–æ–º–µ—á–µ–Ω—ã –∫—Ä–∞—Å–Ω–æ–π –∑–≤—ë–∑–¥–æ—á–∫–æ–π.";
        
        $InlineKeyboardMarkup = [
            'inline_keyboard' => [[[
                'text' => '–ü–µ—Ä–µ–π—Ç–∏ –∫ –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏',
                'url' => "https://–ë—É–¥—å-–∑–¥–æ—Ä–æ–≤.—Ä—É—Å/web/profile/register?tg=".$chat_id
            ]]]
        ];
        $bot->sendMessage($chat_id, $send, null, $InlineKeyboardMarkup);
    }

}

/*
$ReplyKeyboardRemove = [
    'remove_keyboard' => true
];

$HideKeyboard = [
    'hide_keyboard' => true
];
*/
// [–ü–æ–ª–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è](https://–ë—É–¥—å-–∑–¥–æ—Ä–æ–≤.—Ä—É—Å/web/profile/register?tg=".$chat_id.")



function requestCallbackQuery($bot, $callback_query) {
    $from = $callback_query['from'];
        $from_id = $from['id'];
    $message = $callback_query['message'];
        $message_from = $message['from'];
            $message_from_first_name = $message_from['first_name'];
        $chat = $message['chat'];
            $chat_id = $chat['id'];
        $text = $message['text'];        
    $data = $callback_query['data'];
    
        
    if ($data == "client_id")
    {
        $send = "–í–∞—à –Ω–æ–º–µ—Ä: \r\n\r\n" . $from_id;
        $bot->sendMessage($from_id, $send);
    }
    else 
    {
        $send = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞";
        $bot->sendMessage($from_id, $send);
    }
}
